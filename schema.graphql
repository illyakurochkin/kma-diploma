# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  description: String!
  id: String!
  name: String!
  parentCategoryId: String
  products: [Product!]!
}

type CompatibleGroup {
  description: String!
  id: String!
  productsIds: [String!]!
}

input CreateCategoryInput {
  description: String!
  name: String!
  parentCategoryId: String
}

input CreateOrderInput {
  email: String!
  items: [OrderItemInput!]!
}

input CreateProductInput {
  categoriesIds: [String!] = []
  description: String!
  name: String!
  photo: String!
  price: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input GetCategoriesInput {
  parentCategoryId: String!
}

input GetProductsInput {
  categoriesIds: [String!] = []
  compatibleProductsIds: [String!] = []
  maxPrice: Float
  minPrice: Float
  query: String
}

type Mutation {
  createCategory(options: CreateCategoryInput!): Category!
  createOrder(options: CreateOrderInput!): Order!
  createProduct(options: CreateProductInput!): Product!
  deleteCategory(categoryId: String!): Void
  deleteOrder(orderId: String!): Void!
  deleteProduct(productId: String!): Void
  updateCategory(options: UpdateCategoryInput!): Category!
  updateProduct(options: UpdateProductInput!): Product!
}

type Order {
  date: DateTime!
  email: String!
  id: String!
  items: [OrderItem!]!
  product: Product!
}

type OrderItem {
  amount: Int!
  productId: String!
}

input OrderItemInput {
  amount: Int!
  productId: String!
}

type Product {
  categories: [Category!]!
  categoriesIds: [String!]!
  description: String!
  id: String!
  name: String!
  photo: String!
  price: Float!
}

type Query {
  getCategories(options: GetCategoriesInput = {}): [Category!]!
  getCategoryById(categoryId: String!): Category!
  getOrderById(orderId: String!): Order!
  getOrders(email: String): [Order!]!
  getProductById(productId: String!): Product!
  getProducts(options: GetProductsInput = {}): [Product!]!
}

input UpdateCategoryInput {
  description: String!
  id: String!
  name: String!
  parentCategoryId: String
}

input UpdateProductInput {
  categoriesIds: [String!] = []
  description: String!
  id: String!
  name: String!
  photo: String!
  price: Float!
}

"""Represents NULL values"""
scalar Void
